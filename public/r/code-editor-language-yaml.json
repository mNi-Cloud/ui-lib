{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "code-editor-language-yaml",
  "type": "registry:file",
  "title": "YAML Language Plugin for Code Editor",
  "description": "YAML language support for Monaco Code Editor.",
  "dependencies": [
    "monaco-editor",
    "monaco-yaml"
  ],
  "registryDependencies": [
    "https://raw.github.com/mNi-Cloud/ui-lib/main/public/r/code-editor.json"
  ],
  "files": [
    {
      "path": "registry/new-york/blocks/code-editor/lib/language-plugin/yaml.ts",
      "content": "import type { LanguagePlugin } from './index';\n\nconst YamlPlugin: LanguagePlugin = {\n  language: 'yaml',\n  load: async () => {\n    try {\n      // 注: モジュールのパスは環境に応じて変更が必要かもしれません\n      if (typeof window !== 'undefined' && window.monaco) {\n        // すでにMonacoがロードされている場合は追加設定のみ行う\n        return;\n      }\n      \n      // monaco-yamlパッケージをロード（存在する場合）\n      try {\n        const monacoYaml = await import('monaco-yaml');\n        // monaco-yamlが正常にロードされた場合は、後続の設定で適用される\n      } catch (err) {\n        console.warn('monaco-yamlパッケージが見つかりません。基本的なYAML構文ハイライトのみが利用可能です。');\n      }\n    } catch (error) {\n      console.error('YAML言語サポートのロード中にエラーが発生しました:', error);\n    }\n  },\n  configure: (monaco) => {\n    // monaco-yamlがロードされている場合、YAMLの診断オプションを設定\n    if (monaco.languages.yaml && monaco.languages.yaml.yamlDefaults) {\n      monaco.languages.yaml.yamlDefaults.setDiagnosticsOptions({\n        validate: true,\n        enableSchemaRequest: true,\n        hover: true,\n        completion: true,\n        format: true\n      });\n    }\n  }\n};\n\nexport default YamlPlugin; ",
      "type": "registry:file",
      "target": "lib/code-editor/language-plugin/yaml.ts"
    }
  ]
}