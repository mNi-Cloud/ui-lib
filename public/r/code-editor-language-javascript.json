{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "code-editor-language-javascript",
  "type": "registry:file",
  "title": "JavaScript Language Plugin for Code Editor",
  "description": "JavaScript language support for Monaco Code Editor.",
  "dependencies": [
    "monaco-editor"
  ],
  "registryDependencies": [
    "https://raw.github.com/mNi-Cloud/ui-lib/main/public/r/code-editor.json"
  ],
  "files": [
    {
      "path": "registry/new-york/blocks/language-plugin/javascript.ts",
      "content": "import type { LanguagePlugin } from './index';\n\nconst JavaScriptPlugin: LanguagePlugin = {\n  language: 'javascript',\n  load: async () => {\n    try {\n      // 注: モジュールのパスは環境に応じて変更が必要かもしれません\n      if (typeof window !== 'undefined' && window.monaco) {\n        // すでにMonacoがロードされている場合は追加設定のみ行う\n        return;\n      }\n    } catch (error) {\n      console.error('JavaScript言語サポートのロード中にエラーが発生しました:', error);\n    }\n  },\n  configure: (monaco) => {\n    // JavaScriptのフォーマットオプションを設定\n    if (monaco.languages.typescript) {\n      monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n        noSemanticValidation: false,\n        noSyntaxValidation: false,\n      });\n      \n      // JavaScriptのコンパイルオプションを設定\n      monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n        target: monaco.languages.typescript.ScriptTarget.ES2020,\n        allowNonTsExtensions: true,\n        moduleResolution: monaco.languages.typescript.ModuleResolutionKind.NodeJs,\n        module: monaco.languages.typescript.ModuleKind.ESNext,\n        lib: ['es2020', 'dom'],\n      });\n    }\n  }\n};\n\nexport default JavaScriptPlugin; ",
      "type": "registry:file",
      "target": "lib/language-plugin/javascript.ts"
    }
  ]
}